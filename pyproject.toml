[tool.poetry]
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pre-commit = "^4.3.0"

[tool.poetry.group.lint.dependencies]
ruff = "^0.13.3"

[tool.pyright]
exclude = [
  "**/.eggs",
  "**/.git",
  "**/.venv",
  "**/__pycache__",
  "**/docs",
  "**/node_modules",
  "**/typings",
]
pythonPlatform = "All"
pythonVersion = "3.10"
reportDuplicateImport = "none"
reportImportCycles = "none"
reportIncompatibleMethodOverride = "warning"
reportMissingTypeStubs = "none"
reportPrivateUsage = "none"
reportUnknownMemberType = "none"
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportUnusedImport = "none"
reportUnusedVariable = "none"
strictParameterNoneValue = false
typeCheckingMode = "strict"
useLibraryCodeForTypes = true
venv = ".venv"

[tool.ruff]  # https://docs.astral.sh/ruff/settings/#top-level
force-exclude = true
line-length = 100
show-fixes = true
target-version = "py310"

[tool.ruff.format]  # https://docs.astral.sh/ruff/settings/#format
docstring-code-format = true

[tool.ruff.lint]  # https://docs.astral.sh/ruff/settings/#lint
ignore = [
  "COM812",  # Trailing comma missing  # NOTE (kyle): needs to be disabled when using formatter
  "ERA001",  # Found commented-out code  # NOTE (kyle): incorrectly detects cspell
  "FIX002",  # Line contains TODO
  "TD003",  # Missing issue link on the line following this TODO
]
select = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]  # https://docs.astral.sh/ruff/settings/#lintextend-per-file-ignores
"*.py" = [
  "PYI024",  # Use `typing.NamedTuple` instead of `collections.namedtuple` - should only apply to pyi
]

[tool.ruff.lint.flake8-type-checking]  # https://docs.astral.sh/ruff/settings/#lint_flake8-type-checking_runtime-evaluated-base-classes
runtime-evaluated-base-classes = [
  "pydantic.BaseModel",
  "pydantic.BeforeValidator",
]

[tool.ruff.lint.pycodestyle]  # https://docs.astral.sh/ruff/settings/#lint_pycodestyle_max-line-length
max-line-length = 140

[tool.ruff.lint.pydocstyle]  # https://docs.astral.sh/ruff/settings/#lintpydocstyle
convention = "google"

[tool.ruff.lint.pylint]  # https://docs.astral.sh/ruff/settings/#lintpylint
allow-magic-value-types = ["bytes", "int", "str"]
max-args = 15
max-returns = 10

[tool.tomlsort]
all = true
in_place = true
sort_first = ["tool", "tool.poetry"]
spaces_before_inline_comment = 2
trailing_comma_inline_array = true

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
